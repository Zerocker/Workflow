<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.9.2-beta1" last-position="0,0" last-zoom="1" max-obj-count="4"
	 default-schema="public" default-owner="postgres">
<database name="MyDb" is-template="false" allow-conns="true">
</database>

<schema name="public" layer="0" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<table name="Folder" layer="0" collapse-mode="2" max-obj-count="7">
	<schema name="public"/>
	<role name="postgres"/>
	<tablespace name="pg_default"/>
	<position x="40" y="100"/>
	<column name="id" not-null="true" default-value="uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)">
		<type name="uuid" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="items" not-null="true" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="modified_date" not-null="true" default-value="now()">
		<type name="date" length="0"/>
	</column>
	<column name="path">
		<type name="text" length="0"/>
	</column>
	<column name="parent_id">
		<type name="uuid" length="0"/>
	</column>
	<constraint name="Folder_pk" type="pk-constr" table="public.&quot;Folder&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<table name="File" layer="0" collapse-mode="2" max-obj-count="9">
	<schema name="public"/>
	<role name="postgres"/>
	<tablespace name="pg_default"/>
	<position x="440" y="100"/>
	<column name="id" not-null="true">
		<type name="uuid" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="type">
		<type name="text" length="0"/>
	</column>
	<column name="size" not-null="true" default-value="0">
		<type name="smallint" length="0"/>
	</column>
	<column name="modified_date" not-null="true" default-value="now()">
		<type name="date" length="0"/>
	</column>
	<column name="hash">
		<type name="text" length="0"/>
	</column>
	<column name="path">
		<type name="text" length="0"/>
	</column>
	<constraint name="File_pk" type="pk-constr" table="public.&quot;File&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>

	<customidxs object-type="column">
		<object name="id_Folder" index="7"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="Folder_fk" index="1"/>
	</customidxs>
</table>

<relationship name="Folder_has_many_File" type="rel1n" layer="0"
	 src-col-pattern="{sc}_{st}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.&quot;Folder&quot;"
	 dst-table="public.&quot;File&quot;"
	 src-required="true" dst-required="false">
	<label ref-type="name-label">
		<position x="6.78092" y="9.21434"/>
	</label>
</relationship>

<function name="fn_checkfolder"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="smallint" length="0"/>
	</return-type>
	<parameter name="f0" in="true">
		<type name="uuid" length="0"/>
	</parameter>
	<parameter name="f1" in="true">
		<type name="uuid" length="0"/>
	</parameter>
	<parameter name="level" in="true">
		<type name="smallint" length="0"/>
	</parameter>
	<definition><![CDATA[declare
	f uuid = NULL;
begin
	if (f0 = f1) or (level >= 10) then 
		return level;
	else
		SELECT "parent_id" INTO f FROM "Folder" WHERE "id" = f1;
		if f IS NULL then
			return 0;
		else
			return fn_checkfolder(f0, f, (level + 1)::smallint);
		end if;
	end if;
end;
]]></definition>
</function>

<function name="fn1"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="0"/>
	</return-type>
	<definition><![CDATA[declare 
	n integer = 0;
begin
-- проверка на наличие 1 корня дерева
	SELECT COUNT(*) INTO n FROM "Folder" WHERE "parent_id" IS NULL;
	if n <> 1 then
		raise 'Ошибка в инициализации корневого каталога';
		return null;
-- проверка на зацикливание
	elseif fn_checkfolder(new."id"::uuid, new."parent_id"::uuid, 1::smallint) > 0 then
		raise 'Зацикливание в структуре каталогов';
		return null;
	else return new;
	end if;
end;]]></definition>
</function>

<trigger name="tr1" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="public.&quot;Folder&quot;">
		<function signature="public.fn1()"/>
		<columns names="parent_id"/>
</trigger>

<function name="fn2"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="0"/>
	</return-type>
	<definition><![CDATA[declare
	pathfolder text;
begin
	SELECT "path" INTO pathfolder FROM "Folder" WHERE "id" = new."id_Folder";
	UPDATE "File" SET "path" = pathfolder || '\'  || "name"  || '.' || "type"  WHERE "id" = new."id";
	return new;
end;]]></definition>
</function>

<trigger name="tr2" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="public.&quot;File&quot;">
		<function signature="public.fn2()"/>
		<columns names="name"/>
</trigger>

<function name="fn3"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger" length="0"/>
	</return-type>
	<definition><![CDATA[declare
	pathfolder text;
begin
	SELECT "path" INTO pathfolder FROM "Folder" WHERE "id" = new."parent_id";
	UPDATE "Folder" SET "path" = CASE WHEN pathfolder IS NULL THEN '' ELSE pathfolder END || '\' || "name"  WHERE "id" = new."id";
	return new;
end;]]></definition>
</function>

<trigger name="tr3" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="public.&quot;Folder&quot;">
		<function signature="public.fn3()"/>
		<columns names="name"/>
</trigger>

<table name="User" layer="0" collapse-mode="2" pagination="true" attribs-page="0" ext-attribs-page="0" max-obj-count="10">
	<schema name="public"/>
	<role name="postgres"/>
	<tablespace name="pg_default"/>
	<position x="40" y="380"/>
	<column name="id" not-null="true" default-value="uuid_in(md5(random()::text || clock_timestamp()::text)::cstring)">
		<type name="uuid" length="0"/>
	</column>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="mail" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="creation_date" not-null="true" default-value="now()">
		<type name="date" length="0"/>
	</column>
	<column name="password_hash" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="salt" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="limit_size" not-null="true" default-value="16777216">
		<type name="bigint" length="0"/>
	</column>
	<constraint name="User_pk" type="pk-constr" table="public.&quot;User&quot;">
		<columns names="id" ref-type="src-columns"/>
	</constraint>

	<customidxs object-type="column">
		<object name="id_Folder" index="8"/>
		<object name="name_Role" index="7"/>
	</customidxs>

	<customidxs object-type="constraint">
		<object name="Folder_fk" index="2"/>
		<object name="Role_fk" index="1"/>
		<object name="User_uq" index="3"/>
	</customidxs>
</table>

<table name="Role" layer="0" collapse-mode="2" max-obj-count="2">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="440" y="420"/>
	<column name="name" not-null="true">
		<type name="text" length="0"/>
	</column>
	<column name="permissions" not-null="true">
		<type name="text" length="0"/>
	</column>
	<constraint name="Role_pk" type="pk-constr" table="public.&quot;Role&quot;">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
</table>

<relationship name="Role_has_many_User" type="rel1n" layer="0"
	 src-col-pattern="{sc}_{st}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.&quot;Role&quot;"
	 dst-table="public.&quot;User&quot;"
	 src-required="true" dst-required="false"/>

<relationship name="User_has_one_Folder" type="rel11" layer="0"
	 src-col-pattern="{sc}_{st}"
	 pk-pattern="{dt}_pk" uq-pattern="{dt}_uq"
	 src-fk-pattern="{st}_fk"
	 custom-color="#83af1f"
	 src-table="public.&quot;Folder&quot;"
	 dst-table="public.&quot;User&quot;"
	 src-required="false" dst-required="false"/>

<constraint name="Folder_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.&quot;Folder&quot;" table="public.&quot;Folder&quot;">
	<columns names="parent_id" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="Folder_has_many_Folder" type="relfk" layer="0"
	 src-table="public.&quot;Folder&quot;"
	 dst-table="public.&quot;Folder&quot;" reference-fk="Folder_fk"
	 src-required="false" dst-required="false">
	<line>
		<position x="281.227" y="167.083"/>
	<position x="281.227" y="77"/>
	<position x="185.485" y="77"/>
	</line>
	<label ref-type="name-label">
		<position x="-31.7533" y="-5.15"/>
	</label>
</relationship>

</dbmodel>
